package com.github.CodeNekomancer.OADA_Backend.model.Universe;

import lombok.*;

import java.util.List;

@Getter
@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class UniverseInputDTO {
    private String serverId;
    private String name;
    private Integer number;
    private String language;
    private String timezone;
    private String timezoneOffset;
    private String domain;
    private String version;
    private Integer speed;
    private Integer speedFleet;
    private Integer galaxies;
    private Integer systems;
    private Boolean acs;
    private Boolean rapidFire;
    private Boolean defToTF;
    private Float debrisFactor;
    private Float debrisFactorDef;
    private Float repairFactor;
    private Long newbieProtectionLimit;
    private Long newbieProtectionHigh;
    private Long topScore;
    private Integer bonusFields;
    private Boolean donutGalaxy;
    private Boolean donutSystem;
    private Boolean wfEnabled; //WreckField
    private Long wfMinimumRessLost;
    private Integer wfMinimumLossPercentage;
    private Integer wfBasicPercentageRepairable;
    private Float globalDeuteriumSaveFactor;
    private Integer bashlimit;
    private Integer probeCargo;
    private Integer researchDurationDivisor;
    private Integer darkMatterNewAcount;
    private Integer cargoHyperspaceTechMultiplier;
    private Boolean marketplaceEnabled;
    private Float marketplaceBasicTradeRatioMetal;
    private Float marketplaceBasicTradeRatioCrystal;
    private Float marketplaceBasicTradeRatioDeuterium;
    private Float marketplacePriceRangeLower;
    private Float marketplacePriceRangeUpper;
    private Float marketplaceTaxNormalUser;
    private Float marketplaceTaxAdmiral;
    private Float marketplaceTaxCancelOffer;
    private Float marketplaceTaxNotSold;
    private Integer marketplaceOfferTimeout;
    private Boolean characterClassesEnabled;
    private Float minerBonusResourceProduction;
    private Float minerBonusFasterTradingShips;
    private Float minerBonusIncreasedCargoCapacityForTradingShips;
    private Integer minerBonusAdditionalFleetSlots;
    private Integer minerBonusAdditionalMarketSlots;
    private Float minerBonusAdditionalCrawler;
    private Float minerBonusMaxCrawler;
    private Float minerBonusEnergy;
    private Float minerBonusOverloadCrawler;
    private Float resourceBuggyProductionBoost;
    private Float resourceBuggyMaxProductionBoost;
    private Integer resourceBuggyEnergyConsumptionPerUnit;
    private Integer warriorBonusFasterCombatShips;
    private Integer warriorBonusFasterRecyclers;
    private Float warriorBonusFuelConsumption;
    private Float warriorBonusRecyclerFuelConsumption;
    private Float warriorBonusRecyclerCargoCapacity;
    private Integer warriorBonusAdditionalFleetSlots;
    private Integer warriorBonusAdditionalMoonFields;
    private Boolean warriorBonusFleetHalfSpeed;
    private Boolean warriorBonusAttackerWreckfield;
    private Float combatDebrisFieldLimit;
    private Float explorerBonusIncreasedResearchSpeed;
    private Float explorerBonusIncreasedExpeditionOutcome;
    private Float explorerBonusLargerPlanets;
    private Integer explorerUnitItemsPerDay;
    private Float explorerBonusPhalanxRange;
    private Boolean explorerBonusPlunderInactive;
    private Float explorerBonusExpeditionEnemyReduction;
    private Integer explorerBonusAdditionalExpeditionSlots;
    private Float resourceProductionIncreaseCrystalDefault;
    private Float resourceProductionIncreaseCrystalPos1;
    private Float resourceProductionIncreaseCrystalPos2;
    private Float resourceProductionIncreaseCrystalPos3;
    private Float exodusRatioMetal;
    private Float exodusRatioCrystal;
    private Float exodusRatioDeuterium;

    public UniverseInputDTO(List<String> UIDTOStringified) {
        this.serverId = UIDTOStringified.get(0);
        this.name = UIDTOStringified.get(1);
        this.number = Integer.valueOf(UIDTOStringified.get(2));
        this.language = UIDTOStringified.get(3);
        this.timezone = UIDTOStringified.get(4);
        this.timezoneOffset = UIDTOStringified.get(5);
        this.domain = UIDTOStringified.get(6);
        this.version = UIDTOStringified.get(7);
        this.speed = Integer.valueOf(UIDTOStringified.get(8));
        this.speedFleet = Integer.valueOf(UIDTOStringified.get(9));
        this.galaxies = Integer.valueOf(UIDTOStringified.get(10));
        this.systems = Integer.valueOf(UIDTOStringified.get(11));
        this.acs = UIDTOStringified.get(12).equals("1");
        this.rapidFire = UIDTOStringified.get(13).equals("1");
        this.defToTF = UIDTOStringified.get(14).equals("1");
        this.debrisFactor = Float.valueOf(UIDTOStringified.get(15));
        this.debrisFactorDef = Float.valueOf(UIDTOStringified.get(16));
        this.repairFactor = Float.valueOf(UIDTOStringified.get(17));
        this.newbieProtectionLimit = Long.valueOf(UIDTOStringified.get(18));
        this.newbieProtectionHigh = Long.valueOf(UIDTOStringified.get(19));
        this.topScore = Long.valueOf(UIDTOStringified.get(20));
        this.bonusFields = Integer.valueOf(UIDTOStringified.get(21));
        this.donutGalaxy = UIDTOStringified.get(22).equals("1");
        this.donutSystem = UIDTOStringified.get(23).equals("1");
        this.wfEnabled = UIDTOStringified.get(24).equals("1");
        this.wfMinimumRessLost = Long.valueOf(UIDTOStringified.get(25));
        this.wfMinimumLossPercentage = Integer.valueOf(UIDTOStringified.get(26));
        this.wfBasicPercentageRepairable = Integer.valueOf(UIDTOStringified.get(27));
        this.globalDeuteriumSaveFactor = Float.valueOf(UIDTOStringified.get(28));
        this.bashlimit = Integer.valueOf(UIDTOStringified.get(29));
        this.probeCargo = Integer.valueOf(UIDTOStringified.get(30));
        this.researchDurationDivisor = Integer.valueOf(UIDTOStringified.get(31));
        this.darkMatterNewAcount = Integer.valueOf(UIDTOStringified.get(32));
        this.cargoHyperspaceTechMultiplier = Integer.valueOf(UIDTOStringified.get(33));
        this.marketplaceEnabled = UIDTOStringified.get(34).equals("1");
        this.marketplaceBasicTradeRatioMetal = Float.valueOf(UIDTOStringified.get(35));
        this.marketplaceBasicTradeRatioCrystal = Float.valueOf(UIDTOStringified.get(36));
        this.marketplaceBasicTradeRatioDeuterium = Float.valueOf(UIDTOStringified.get(37));
        this.marketplacePriceRangeLower = Float.valueOf(UIDTOStringified.get(38));
        this.marketplacePriceRangeUpper = Float.valueOf(UIDTOStringified.get(39));
        this.marketplaceTaxNormalUser = Float.valueOf(UIDTOStringified.get(40));
        this.marketplaceTaxAdmiral = Float.valueOf(UIDTOStringified.get(41));
        this.marketplaceTaxCancelOffer = Float.valueOf(UIDTOStringified.get(42));
        this.marketplaceTaxNotSold = Float.valueOf(UIDTOStringified.get(43));
        this.marketplaceOfferTimeout = Integer.valueOf(UIDTOStringified.get(44));
        this.characterClassesEnabled = Boolean.valueOf(UIDTOStringified.get(45));
        this.minerBonusResourceProduction = Float.valueOf(UIDTOStringified.get(46));
        this.minerBonusFasterTradingShips = Float.valueOf(UIDTOStringified.get(47));
        this.minerBonusIncreasedCargoCapacityForTradingShips = Float.valueOf(UIDTOStringified.get(48));
        this.minerBonusAdditionalFleetSlots = Integer.valueOf(UIDTOStringified.get(49));
        this.minerBonusAdditionalMarketSlots = Integer.valueOf(UIDTOStringified.get(50));
        this.minerBonusAdditionalCrawler = Float.valueOf(UIDTOStringified.get(51));
        this.minerBonusMaxCrawler = Float.valueOf(UIDTOStringified.get(52));
        this.minerBonusEnergy = Float.valueOf(UIDTOStringified.get(53));
        this.minerBonusOverloadCrawler = Float.valueOf(UIDTOStringified.get(54));
        this.resourceBuggyProductionBoost = Float.valueOf(UIDTOStringified.get(55));
        this.resourceBuggyMaxProductionBoost = Float.valueOf(UIDTOStringified.get(56));
        this.resourceBuggyEnergyConsumptionPerUnit = Integer.valueOf(UIDTOStringified.get(57));
        this.warriorBonusFasterCombatShips = Integer.valueOf(UIDTOStringified.get(58));
        this.warriorBonusFasterRecyclers = Integer.valueOf(UIDTOStringified.get(59));
        this.warriorBonusFuelConsumption = Float.valueOf(UIDTOStringified.get(60));
        this.warriorBonusRecyclerFuelConsumption = Float.valueOf(UIDTOStringified.get(61));
        this.warriorBonusRecyclerCargoCapacity = Float.valueOf(UIDTOStringified.get(62));
        this.warriorBonusAdditionalFleetSlots = Integer.valueOf(UIDTOStringified.get(63));
        this.warriorBonusAdditionalMoonFields = Integer.valueOf(UIDTOStringified.get(64));
        this.warriorBonusFleetHalfSpeed = UIDTOStringified.get(65).equals("1");
        this.warriorBonusAttackerWreckfield = UIDTOStringified.get(66).equals("1");
        this.combatDebrisFieldLimit = Float.valueOf(UIDTOStringified.get(67));
        this.explorerBonusIncreasedResearchSpeed = Float.valueOf(UIDTOStringified.get(68));
        this.explorerBonusIncreasedExpeditionOutcome = Float.valueOf(UIDTOStringified.get(69));
        this.explorerBonusLargerPlanets = Float.valueOf(UIDTOStringified.get(70));
        this.explorerUnitItemsPerDay = Integer.valueOf(UIDTOStringified.get(71));
        this.explorerBonusPhalanxRange = Float.valueOf(UIDTOStringified.get(72));
        this.explorerBonusPlunderInactive = UIDTOStringified.get(73).equals("1");
        this.explorerBonusExpeditionEnemyReduction = Float.valueOf(UIDTOStringified.get(74));
        this.explorerBonusAdditionalExpeditionSlots = Integer.valueOf(UIDTOStringified.get(75));
        this.resourceProductionIncreaseCrystalDefault = Float.valueOf(UIDTOStringified.get(76));
        this.resourceProductionIncreaseCrystalPos1 = Float.valueOf(UIDTOStringified.get(77));
        this.resourceProductionIncreaseCrystalPos2 = Float.valueOf(UIDTOStringified.get(78));
        this.resourceProductionIncreaseCrystalPos3 = Float.valueOf(UIDTOStringified.get(79));
        this.exodusRatioMetal = Float.valueOf(UIDTOStringified.get(80));
        this.exodusRatioCrystal = Float.valueOf(UIDTOStringified.get(81));
        this.exodusRatioDeuterium = Float.valueOf(UIDTOStringified.get(82));
    }
}
